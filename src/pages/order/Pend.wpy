<style lang="less">
  Page {
    background: #fafafa;
  }
  .clock {
    width: 34rpx;
    height: 34rpx;
    padding: 30rpx;
  }
  .head {
    display: flex;
    position: relative;
  }
  .pay {
    color: #fff;
    font-size: 28rpx;
  }
  .please {
    color: #fff;
    font-size: 24rpx;
  }
  .payWrapper {
    padding: 30rpx 0;
  }

  .Thank {
    display: flex;
    background: #fff;
    color: #333333;
    font-size: 26rpx;
    padding: 30rpx;
  }
  .shops {
    width: 20rpx;
    height: 18rpx;
    align-self: center;
    vertical-align: middle;
    padding-right: 10rpx;
  }
  .this {
    flex: 1;
  }
  .arrow {
    width: 16rpx;
    height: 16rpx;
    vertical-align: middle;
    align-self: center;
  }
  .arrow-1 {
    width: 16rpx;
    height: 16rpx;
    padding-left: 19rpx;
    vertical-align: middle;
    align-self: center;
  }
  .writer {
    display: flex;
    padding: 20rpx 30rpx;
    background: #fff;
  }
  .waiter {
    flex: 1;
    font-size: 24rpx;
    color: #333;
  }
  /*.payment {*/
    /*float: right;*/
    /*color: #ff4552;*/
  /*}*/
  .active {
    width: 120rpx;
    height: 120rpx;
  }
  .mountCenter {
    display: flex;
    background: #fff;
    padding: 20rpx 30rpx;
    border-bottom: 1px solid #f2f2f2;
    border-top: 1px solid #f2f2f2;
  }
  .mountLeft {
    flex: 1;
  }
  .descript {
    margin-left: 20rpx;
    font-size: 24rpx;
    color: #333333;
  }
  .Actual {
    background: #fff;
    text-align: right;
    padding: 23rpx 30rpx 20rpx;
    font-size: 22rpx;
    border-bottom: 1px solid #f2f2f2;
  }
  .leave {
    background: #fff;
    text-align: right;
    padding: 10rpx 30rpx;
  }
  .leaveChild {
    border: 1px solid #ff4552;
    color: #ff4552;
    font-size: 24rpx;
    padding: 0 33rpx;
    height: 50rpx;
    line-height: 50rpx;
    text-align: right;
    display: inline-block;
  }
  .grey {
    color: #999999;
  }
  .AmountWrapper {
    margin: 20rpx 0;
  }
  .mine-bott {
    width: 30rpx;
    height: 30rpx;
    margin-right: 22rpx;
    align-self: center;
    vertical-align: middle;
  }
  .big {
    font-size:28rpx;
  }
  .store {
    background: #fff;
    font-size:26rpx;
    border-bottom: 1px solid #f2f2f2;
  }
  .storeChild {
    padding: 30rpx;
  }
  .name {
    color: #333333;
  }
  .title {
    color: #999999;
    float: right;
    text-align: right;
  }
  .foot {
    padding: 15rpx 30rpx;
    background: #fff;
    font-size: 24rpx;
    position: absolute;
    left: 0;
    right: 0;
    bottom: 0;
  }
  .cancel {
    border-radius:10rpx;
    border:1px solid #ff4552;
    color:#ff4552;
    display: inline-block;
    width: 165rpx;
    height: 66rpx;
    line-height: 66rpx;
    text-align: center;
    float: right;
    margin-right: 15rpx;
  }

  .canLever{
    border-radius:10rpx;
    border:1px solid #333;
    color:#333;
    display: inline-block;
    width: 165rpx;
    height: 66rpx;
    line-height: 66rpx;
    text-align: center;
    float: right;
    margin-right: 15rpx;
  }

  .level {
    border-radius:10rpx;
    border: 1px solid #ff4552;
    color: #ff4552;
    display: inline-block;
    width: 165rpx;
    height: 66rpx;
    line-height: 66rpx;
    text-align: center;
    float: right;
  }
  .Mountain {
    display: flex;
    padding-bottom:15rpx;
  }
  .should {
    font-size:24rpx;
    flex: 1;
  }
  .cock{
    width:100%;
    height:130rpx;
  }
  .heading{
    position:absolute;
    left:0;
    right:0;
  }
  .payWrapper{
    position:absolute;
    top:0;
    left:80rpx;
    right:0;
  }
</style>
<template>
<view>
  <view class="head">
    <image class="cock" src="../../assets/clockfather.png"></image>
    <view class="heading">
      <image wx:if="{{Lider.status===1}}" class="clock" src="../../assets/clock.png"></image>
      <image wx:if="{{Lider.status===4}}" class="clock" src="../../assets/fail.png"></image>
      <image wx:if="{{Lider.status===3}}" class="clock" src="../../assets/finshed.png"></image>
      <view class="payWrapper">
        <view class="pay">{{Lider.statusText}}</view>
        <view wx:if="{{Lider.status===1}}" class="please">请在{{h}}:{{m}}:{{s}}内付款，超时订单将自动关闭</view>
        <view wx:if="{{Lider.describe}}" class="please">{{Lider.describe}}</view>
      </view>
    </view>
  </view>

  <view class="Thank" @tap="thanks({{Lider.storeId}})">
     <image class="shops" mode='widthFix' src="../../assets/shops-1.png"></image>
     <text class="this">感谢你在本店铺消费，欢迎你再次光临！</text>
     <image mode="widthFix" class="arrow" src="../../assets/arrow.png"></image>
  </view>

  <view class="AmountWrapper">
      <view class="writer" @tap="thanks({{Lider.storeId}})">
        <image class="mine-bott"  src="{{Lider.storeAvatar}}"></image>
        <view class="waiter">
          <text>{{Lider.storeName}}</text>
          <image mode="widthFix" class="arrow-1" src="../../assets/arrow.png"></image>
          <!--<text class="payment">{{Lider.statusText}}</text>-->
        </view>
      </view>
      <!--中间部分-->
    <view class="mountCenter">
      <image class="active" src="{{Lider.storeAvatar}}"></image>
      <view class="mountLeft">
        <view class="descript">
          <view class="Mountain">
            <text class="should">应付金额</text>
            <view>￥{{Lider.orderAmount}}</view>
          </view>
          <view class="Mountain">
            <text class="should">红包金额</text>
            <view class="grey">-￥{{Lider.storeDiscountAmount}}</view>
          </view>
          <view class="Mountain">
            <text class="should">下单时间</text>
            <view class="grey">{{Lider.createdAt}}</view>
          </view>
        </view>
      </view>
    </view>
  <!--底部-->
  <view class="Actual">
    实付金额:￥<text class="big">{{Lider.totalAmount}}</text>
  </view>
</view>

<view class="store">
  <view class="storeChild">
    <text class="name">店铺全称</text>
    <text class="title">{{Lider.storeName}}</text>
  </view>
 </view>
 <view class="store">
   <view class="storeChild">
    <text class="name">交易订单号</text>
    <text class="title">{{Lider.sn}}</text>
 </view>
</view>
 <view class="store">
  <view class="storeChild">
   <text class="name">创建时间</text>
   <text class="title">{{Lider.createdAt}}</text>
  </view>
</view>
   <view class="foot">
     <text wx:if="{{Lider.status===1}}" class="level" @tap="payMent">去支付</text>
     <text wx:if="{{Lider.status===1}}" class="canLever" @tap="CancelPayMent">取消订单</text>
     <text wx:if="{{Lider.status!==1}}" @tap="deleting" class="cancel">删除订单</text>
  </view>
 </view>

</template>

<script>
  import wepy from 'wepy';
  import {getOrderDetail, getDelete, getOrderClose} from '../../util/util'
  export default class Pend extends wepy.page {
    config = {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: '订单详情',
      navigationBarTextStyle: 'black'
    };
    data = {
      Lider:[],
      index:0,
      h:'',
      m:'',
      s: '',
      timer: null,
      LiderId: ''
    };
    methods = {
      // 取消订单
      CancelPayMent(){
        getOrderClose({id:this.Lider.id, method:'post'}).then(res=>{
          if(res){
            wx.navigateTo({
              url:'order'
            })
          }
        })
      },
      // 删除订单
      deleting(){
        let id = this.Lider.id;
        getDelete({id:id,method:'post'}).then(res=>{
            wx.navigateBack({
              url: 'order'
            })
          this.$apply()
        });
      },
      // 进店铺详情
      thanks(id){
        wx.navigateTo({
          url:'../../pages/shopDetail/store?id='+id
        })
      },
      //去支付
      payMent(){
        if(this.Lider.status===1){
            wx.navigateTo({
              url: '../../pages/payment/onlinePayment?vcd='+this.Lider.id
            })
        }
      }
    };
    events = {};
    getOrderDetail(id){
      // 订单详情
      getOrderDetail({id:this.LiderId}).then(res =>{
        this.Lider = res.data;
        let t = this.Lider.endAtTime;
        let self = this;
        clearInterval(this.timer);
        this.timer = setInterval(()=> {
          let hh = parseInt(t / 60 / 60 % 24, 10);
          let mm = parseInt(t / 60 % 60, 10);
          let ss = parseInt(t % 60, 10);
          self.h = hh<10 ? ("0" + hh) : hh;   //时
          self.m = mm<10?("0" + mm):mm;   //分
          self.s = ss<10?("0" + ss):ss;   //秒
          t--;
          if(parseInt(t) < 0) {
            clearInterval(this.timer)
          }
          this.$apply()
        }, 1000);
      })
    }
    onUnload(){
      clearInterval(this.timer)
    }
    onShow(){
      this.getOrderDetail()
    }
    onLoad(opts){
      this.LiderId = opts.id
    }
  }
</script>



