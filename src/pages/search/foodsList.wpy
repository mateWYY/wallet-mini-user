<style lang="less">
  /*福袋店铺列表*/
  Page {
    background: #fff;
  }
  .wrapper {
    padding: 0 30rpx;
    background: #fff;
  }
  .Lady {
    color: #333;
    font-size:26rpx;
    font-weight: bold;
  }
  .beauty-1 {
    font-size: 10px;
    color: #666;
    display: inline-block;
    padding: 10rpx 0 13rpx;
  }
  .minte{
    padding:2rpx 10rpx 2rpx;
    align-self: center;
    font-size: 20rpx;
    background-color:rgba(255, 165, 0, 0.05);
    border-radius:5rpx;
    color: #ffa500;
  }
  .minFather {
    display: flex;
  }
  .min {
    text-align: right;
    font-size: 20rpx;
    color: #666;
    flex: 1;
    float: right;
  }
  .active {
    width: 120rpx;
    height: 120rpx;
  }
  .distance {
    font-size: 0;
    border-bottom: 1px solid #f2f2f2;
    padding-bottom:10rpx;
    flex: 1;
    color: #666;
  }
  .shops {
    width: 20rpx;
    height: 18rpx;
    vertical-align: middle;
    align-self: center;
    padding-right: 6rpx;
  }
  .allOther {
    padding: 25rpx 15px 0;
    border-bottom: 1px solid #ddd;
    background: #fff;
  }
  .footprints {
    display: flex;
    padding: 12rpx 0;
    background: #fff;
  }
  .shopBag {
    width: 32rpx;
    height: 39rpx;
    vertical-align: middle;
  }
  .melon {
    padding-left: 40rpx;
    padding-right: 30rpx;
    background: #fff;
  }
  .other {
    display: flex;
    border-bottom: 1px solid #f2f2f2;
  }
  .crust {
    color: #ff4552;
    font-size: 28rpx;
  }

  .already {
    color: #999999;
    font-size: 20rpx;
  }

  .kind {
    color: #333333;
    font-size: 26rpx;
  }

  .total {
    flex: 1;
    padding: 25rpx 0;
  }

  .branch {
    border-radius: 10rpx;
    border: 1px solid #ff4552;
    color: #ff4552;
    font-size: 24rpx;
    width: 133rpx;
    height: 53rpx;
    line-height: 53rpx;
    text-align: center;
    align-self: center;
  }

  .allonter {
    padding: 25rpx 30rpx 25rpx 10rpx;
  }

  /*全部类型*/
  .AllType {
    display: flex;
    font-size: 24rpx;
    color: #333;
    border-bottom: 1px solid #f2f2f2;
    padding: 22rpx 30rpx;
    background: #fff;
  }
  .basc {
    padding-right: 14rpx;
  }

  .dot-bottom {
    display: inline-block;
    font-size: 0;
    line-height: 0;
    border-width: 13rpx;
    border-color: #999;
    border-bottom-width: 0;
    border-style: dashed;
    border-top-style: solid;
    border-left-color: transparent;
    border-right-color: transparent;
    margin-right: 60rpx;
  }

  .AllType .active_all{
    color: #ff4552;
  }
  .AllType .active_all .dot-bottom{
    border-color:#ff4552;
    border-bottom-width:0;
    border-style:dashed;
    border-top-style:solid;
    border-left-color:transparent;
    border-right-color:transparent;
    -webkit-transform:rotate(180deg);
    transform:rotate(180deg);
  }
  .search {
    display: flex;
    padding: 0 30rpx;
    position: relative;
    background: #fff;
  }

  .inputPage {
    border-radius: 20px;
    background: #f2f2f2;
    flex: 1;
    font-size: 13px;
    height: 30px;
    padding-left: 70rpx;
    margin-right: 32rpx;
  }

  .icon-sousuo {
    padding-right: 20rpx;
  }

  .see {
    position: absolute;
    top: 14rpx;
    left: 50rpx;
    bottom: 0;
    z-index: 100;
    color: #666;
  }

  .sorry {
    font-size: 30rpx;
    color: #999;
    text-align: center;
    margin: 500rpx auto 0;
  }

  /*下拉列表*/
  .person_modal {
    position: fixed;
    left: 0;
    top: 138rpx;
    width: 100%;
    height: 100%;
    overflow: hidden;
    z-index: 22;
  }
  .person_box{
    position: absolute;
    width: 100%;
    height: 100%;
    background-color: rgba(0,0,0,0.5);
    left: 0;
    top: 0;
  }
  .phone_select {
    width: 100%;
    margin-top: 0;
    z-index: 100;
    position: absolute; //小程序中z-index和absolute需要同时存在，元素才能脱离文档。
  }
  .phone_select .selectCategory{
    padding: 0 30rpx;
    background-color: #fff;
  }
  .filter-category{
    width: 100%;
    z-index: 100;
    position: absolute;
    background-color: #fff;
    display: flex;
  }
  .filter-category .left-mainCategory{
    font-size: 28rpx;
    border-right: 1px solid #f2f2f2;
    width: 200rpx;
  }
  .filter-category .mainCategoryItem{
    padding: 20rpx 30rpx;
    font-size: 26rpx;
    box-sizing: border-box;
  }
  .filter-category .mainCategoryItem.mainActive{
    border-left: 4px solid #ff4552;
    padding-left: 22rpx;
    box-sizing: border-box;
  }
  .filter-category .right-childCategory{
    height: 580rpx;
    flex: 1;
  }
  .filter-category .childCategoryItem{
    padding: 20rpx 30rpx 20rpx 50rpx;
    font-size: 26rpx;
  }

  .filter-category .childCategoryItem.childActive{
    color: #ff4552;
  }

  .select_one {
    background-color: #fff;
    width: 100%; //脱离文档后元素width不能再用百分比。
    font-size: 26rpx;
    padding: 26rpx 0;
    letter-spacing: 1px;
    color: #333333;
    display: flex;
    justify-content: space-between;
  }
  .select_one .nice{
    border-color: #ff4552;
    width: 10rpx;
    height: 25rpx;
    margin:0 auto;
    position:relative;
    bottom: 0;
    border-right:2px solid #ff4552;
    border-bottom:2px solid #ff4552;
    transform:rotateZ(45deg)
  }
  .select_one .text-color{
    flex: 1
  }
  .rotateRight {
    transform: rotate(180deg); //180°旋转图片。
  }
  .foodList_hidden{
    height: 100vh;
    overflow: hidden;
  }
  .foodList-top{
    position: sticky;
    position: -webkit-sticky;
    top: 0;
    height: 136rpx;
  }
  .distanceSelect{
    color: #ff4552;
  }
  .icon-guanbi1{
    color:#666;
    position: absolute;
    top: 14rpx;
    right:90rpx;
    bottom:0;
    z-index:100;
  }
</style>

<template>
  <view class="foodList {{selectPersonShow ? 'foodList_hidden' : ''}}">
    <view class="foodList-top">
      <view class="search">
        <input  maxlength="30" @confirm='toSearch' @input="inputTyping"  class="inputPage"
               confirm-type="搜索" placeholder="搜索"  value="{{params.keyword}}"/>
        <text class="see iconfont icon-sousuo"></text>
        <text wx:if="{{params.keyword}}" @tap="closeInputVal" class="iconfont icon-guanbi1"></text>
      </view>
      <!--店铺福袋列表-->
      <view class="AllType" wx:if="{{FindWallet.length>0}}">
        <view @tap="clickPerson(1)" class="{{selectPerson == 1 && selectPersonShow ? 'active_all' :''}}">
          <text class="basc">全部类型</text>
          <view class="dot-bottom"></view>
        </view>
        <view @tap="clickPerson(2)" class="{{selectPerson == 2 && selectPersonShow ? 'active_all' :''}}">
          <text class="basc">附近</text>
          <view class="dot-bottom"></view>
        </view>
      </view>
    </view>

    <view class="person_modal" catchtouchmove="move" wx:if="{{selectPersonShow}}">
      <view class="phone_select" hidden="{{selectPerson == 1}}">
        <view class="selectCategory">
          <repeat for="{{distance}}" item="item" index="index">
            <view class="select_one {{distanceIndex == index ? 'distanceSelect' : ''}}"
                  @tap="setDistance({{index}},{{item}})">
              <text class="text-color">{{item}}</text>
              <view class="nice" wx:if="{{distanceIndex == index}}"></view>
            </view>
          </repeat>
        </view>
      </view>
      <view hidden="{{selectPerson == 2}}" class="filter-category" >
        <view class="left-mainCategory">
          <repeat for="{{allCategory}}" item="item" index="index">
            <view class="mainCategoryItem {{mainSelectCate == index ? 'mainActive': ''}}"
                  @tap="selectMainCategory({{index}},{{item}})">
              {{item.name}}
            </view>
          </repeat>
          <view class="mainCategoryItem" @tap="allMainCate">
            <text class="text-color">全部</text>
          </view>
        </view>
        <scroll-view scroll-y  class="right-childCategory">
          <repeat for="{{categoryChilds}}" item="item">
            <view class="childCategoryItem {{selectCategoryId == item.id ? 'childActive' : ''}}"
                  @tap="filterCate({{item}})">
              {{item.name}}
            </view>
          </repeat>
        </scroll-view>
      </view>
      <view class="person_box" @tap="close"></view>
    </view>
    <loadmore :pullUpStatus.sync="haveMore" :loading.sync="loading">
      <repeat for="{{FindWallet}}" item="item">
        <Delicious :syncTitle.sync="item" wx:if="{{FindWallet.length}}" :types="-1"></Delicious>
      </repeat>
    </loadmore>
  </view>
</template>

<script>
  import wepy from 'wepy';
  import {getSearchStore, getCommonCategories, getCommonChilds} from '../../util/util'
  import Delicious from '../../components/Delicious';
  import loadmore from '../../components/loadmore';
  export default class foodsList extends wepy.page {
    config = {
      enablePullDownRefresh: true
    };
    data = {
      params: {
        cityId: '',
        'per-page': 10,
        page: 1,
        distance: '',
        categoryId: '',
        keyword: '',
        lat: '',
        lon: ''
      },
      loading: true,
      haveMore: true,
      FindWallet: [],
      distance: ['附近', '1km', '3km', '5km', '10km'],
      allCategory: [],
      selectCategoryId: 0,
      categoryChilds: [],
      mainSelectCate: 0,
      distanceIndex: 0,
      selectPersonShow: false,
      selectPerson: 1,
      selectArea: false
    };
    components = {
      Delicious: Delicious,
      loadmore
    };
    getAllCategory(){
      getCommonCategories({data: {type: 1}}).then(res => {
        this.allCategory = res.data
        this.$apply()
        this.getChildsCategory(this.allCategory[0].id)
      })
    }
    getChildsCategory(id) {
      getCommonChilds({id: id}).then(res => {
        this.categoryChilds = res.data
        this.$apply()
      })
    }
    getAllStores(clear) {
      const {latitude, longitude} = this.$parent.globalData.locationMap
      this.params.cityId = this.$parent.globalData.cityId.id || ''
      if (latitude && longitude && this.params.keyword) {
        this.params.lat = latitude
        this.params.lon = longitude
        getSearchStore({cityId: this.params.cityId, data: this.params}).then(res => {
          const data = res.data
          !data.length ? this.loading = false : this.loading = true
          if (data.length === this.params['per-page']) {
            this.haveMore = true
            this.params.page += 1
          } else {
            this.haveMore = false
          }
          if (clear) {
            this.FindWallet = data
          } else {
            this.FindWallet = this.FindWallet.concat(data)
          }
          this.$apply()
        })
      }
    }
    methods = {
      inputTyping(e) {
        this.params.keyword = e.detail.value
      },
      closeInputVal (e) {
        this.params.keyword = ''
      },
      //监听input输入框//
      toSearch(e){
        this.params.keyword = e.detail.value
        if(this.params.keyword){
          this.getAllStores(true)
        }
      },
      setDistance(index, i) {
        this.distanceIndex = index
        if (index === 0) {
          this.params.distance = ''
        } else {
          this.params.distance = parseInt(i)
        }
        this.params.page = 1
        this.getAllStores(true)
        this.selectPersonShow = false
      },
      // 点击选择类型
      clickPerson(val) {
        this.selectPersonShow = true
        this.selectPerson = val
      },
      allMainCate() {
        this.params.categoryId = ''
        this.params.distance = ''
        this.params.page = 1
        this.getAllStores(true)
        this.selectPersonShow = false
      },
      selectMainCategory(val, item) {
        this.mainSelectCate = val
        this.getChildsCategory(item.id)
      },
      filterCate(item) {
        this.selectCategoryId = item.id
        this.params.categoryId = item.id
        this.params.page = 1
        this.getAllStores(true)
        this.selectPersonShow = false
      },
      move(e) {
//        console.log(e)
      },
      // 点击切换
      mySelect(e) {
        this.firstPerson = e.target.dataset.me
        this.selectPerson = true
        this.selectArea = false
      },
      close() {
        this.selectPersonShow = false
      },
    };
    onPullDownRefresh () {
      wepy.showNavigationBarLoading()
      setTimeout(() => {
        this.params.page = 1;
        this.getAllStores(true)
        wepy.hideNavigationBarLoading(); // 完成停止加载
        wepy.stopPullDownRefresh() // 停止下拉刷新
      }, 1000)
    }
    onReachBottom (event) {
      setTimeout(() => {
        if (this.haveMore) {
          this.getAllStores()
        }
        this.$apply()
      }, 1000)
    }
    onLoad(opt) {
      if (opt.vcn) this.params.keyword = opt.vcn;
      this.getAllCategory();
      this.getAllStores(true)
    };
    // Other properties
  }
</script>
